# Generated by Django 4.1.3 on 2022-12-07 16:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='Agent', variations={'thumb': {'crop': True, 'height': 70, 'width': 70}}, verbose_name='Imagem')),
                ('name', models.CharField(max_length=255, verbose_name='Nome do corretor')),
                ('number', models.CharField(max_length=255, verbose_name='Telefone')),
                ('facebook', models.URLField(verbose_name='Facebook')),
                ('instagram', models.URLField(verbose_name='Instagram')),
                ('whatsapp', models.URLField(verbose_name='WhatsApp')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome da categoria')),
                ('icon', models.CharField(choices=[('icon-1', 'residencial'), ('icon-2', 'comercial'), ('icon-3', 'industrial'), ('icon-4', 'rural')], max_length=255, verbose_name='Icone')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Cidade')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Bairro')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.city')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='cover', variations={'thumb': {'crop': True, 'height': 250, 'width': 370}}, verbose_name='Imagem')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='Slug')),
                ('content', models.TextField()),
                ('price', models.IntegerField()),
                ('address', models.TextField()),
                ('rooms', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=255, verbose_name='Quartos?')),
                ('bathrooms', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=255, verbose_name='Banheiros?')),
                ('garage_size', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=255, verbose_name='Vagas?')),
                ('area', models.IntegerField(verbose_name='Área')),
                ('type_property', models.CharField(choices=[('sale', 'Venda'), ('rent', 'Aluguel')], max_length=255, verbose_name='Venda ou Aluguel?')),
                ('plant', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='Plant', variations={'thumb': {'crop': True, 'height': 337, 'width': 439}}, verbose_name='Planta')),
                ('zipcode', models.CharField(max_length=255, verbose_name='CEP')),
                ('google_maps', models.TextField()),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.agent')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.category')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.city')),
                ('distric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.district')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.state')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='property', variations={'thumb': {'crop': True, 'height': 520, 'width': 770}}, verbose_name='Imagem')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.property')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.state'),
        ),
    ]
